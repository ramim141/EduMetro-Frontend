// --- START OF FILE components/dashboard/DashboardIcons.jsx ---
import { motion } from "framer-motion"

export const BookIcon = ({ size = 24, className = "", animated = false }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="currentColor" className={className} animate={animated ? { rotateY: [0, 15, 0] } : {}} transition={{ duration: 2, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" }}> <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H6.5A2.5 2.5 0 0 0 4 4.5v15z" /> <motion.path d="M6 2h14v15H6z" initial={{ pathLength: 0 }} animate={{ pathLength: animated ? [0, 1, 0] : 1 }} transition={{ duration: 3, repeat: Number.POSITIVE_INFINITY }} /> </motion.svg> )
export const DownloadIcon = ({ size = 24, className = "", animated = false }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} animate={animated ? { y: [0, -3, 0] } : {}} transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" }}> <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" /> <motion.polyline points="7,10 12,15 17,10" animate={animated ? { pathLength: [0, 1, 0] } : {}} transition={{ duration: 2, repeat: Number.POSITIVE_INFINITY }} /> <motion.line x1="12" y1="15" x2="12" y2="3" animate={animated ? { pathLength: [1, 0, 1] } : {}} transition={{ duration: 2, repeat: Number.POSITIVE_INFINITY, delay: 0.5 }} /> </motion.svg> )
export const HeartIcon = ({ size = 24, className = "", animated = false }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="currentColor" className={className} animate={animated ? { scale: [1, 1.2, 1] } : {}} transition={{ duration: 1, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" }}> <motion.path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" animate={animated ? { fill: ["#EF4444", "#F87171", "#EF4444"] } : {}} transition={{ duration: 2, repeat: Number.POSITIVE_INFINITY }} /> </motion.svg> )
export const BookmarkIcon = ({ size = 24, className = "", animated = false }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="currentColor" className={className} animate={animated ? { rotateZ: [0, 5, -5, 0] } : {}} transition={{ duration: 2, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" }}> <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z" /> </motion.svg> )
export const PlusIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} whileHover={{ rotate: 180 }} transition={{ duration: 0.3 }}> <line x1="12" y1="5" x2="12" y2="19" /> <line x1="5" y1="12" x2="19" y2="12" /> </motion.svg> )
export const ArrowRightIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} whileHover={{ x: 3 }} transition={{ type: "spring", stiffness: 400 }}> <line x1="5" y1="12" x2="19" y2="12" /> <polyline points="12,5 19,12 12,19" /> </motion.svg> )
export const TrendingUpIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} animate={{ pathLength: [0, 1, 0] }} transition={{ duration: 3, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" }}> <polyline points="23,6 13.5,15.5 8.5,10.5 1,18" /> <polyline points="17,6 23,6 23,12" /> </motion.svg> )
export const SparklesIcon = ({ size = 24, className = "", animated = true }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="currentColor" className={className} animate={animated ? { rotate: 360 } : {}} transition={{ duration: 8, repeat: Number.POSITIVE_INFINITY, ease: "linear" }}> <motion.path d="M12 0l1.09 3.09L16 2l-1.09 3.09L18 6l-3.09 1.09L16 10l-3.09-1.09L12 12l-1.09-3.09L8 10l1.09-3.09L6 6l3.09-1.09L8 2l3.09 1.09L12 0z" animate={animated ? { scale: [1, 1.2, 1], opacity: [0.7, 1, 0.7] } : {}} transition={{ duration: 2, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" }} /> <motion.path d="M19 10l.5 1.5L21 11l-1.5.5L19 13l-.5-1.5L17 11l1.5-.5L19 10z" animate={animated ? { scale: [0.8, 1.3, 0.8] } : {}} transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut", delay: 0.5 }} /> <motion.path d="M5 16l.5 1.5L7 17l-1.5.5L5 19l-.5-1.5L3 17l1.5-.5L5 16z" animate={animated ? { scale: [1.1, 0.9, 1.1] } : {}} transition={{ duration: 1.8, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut", delay: 1 }} /> </motion.svg> )
export const AwardIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} whileHover={{ scale: 1.1, rotate: 5 }} transition={{ type: "spring", stiffness: 300 }}> <circle cx="12" cy="8" r="7" /> <polyline points="8.21,13.89 7,23 12,20 17,23 15.79,13.88" /> </motion.svg> )
export const StarIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="currentColor" className={className} whileHover={{ rotate: 72 }} transition={{ type: "spring", stiffness: 200 }}> <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26" /> </motion.svg> )
export const UserIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} whileHover={{ y: -2 }} transition={{ type: "spring", stiffness: 400 }}> <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" /> <circle cx="12" cy="7" r="4" /> </motion.svg> )
export const ActivityIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} animate={{ pathLength: [0, 1, 0] }} transition={{ duration: 4, repeat: Number.POSITIVE_INFINITY, ease: "easeInOut" }}> <polyline points="22,12 18,12 15,21 9,3 6,12 2,12" /> </motion.svg> )
export const TargetIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} whileHover={{ scale: [1, 1.1, 1] }} transition={{ duration: 0.3 }}> <circle cx="12" cy="12" r="10" /> <circle cx="12" cy="12" r="6" /> <circle cx="12" cy="12" r="2" /> </motion.svg> )
export const UsersIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} whileHover={{ scale: 1.05 }}> <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2" /> <circle cx="9" cy="7" r="4" /> <path d="M23 21v-2a4 4 0 0 0-3-3.87" /> <path d="M16 3.13a4 4 0 0 1 0 7.75" /> </motion.svg> )
export const PieChartIcon = ({ size = 24, className = "" }) => ( <motion.svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className} animate={{ rotate: 360 }} transition={{ duration: 20, repeat: Number.POSITIVE_INFINITY, ease: "linear" }}> <path d="M21.21 15.89A10 10 0 1 1 8 2.83" /> <path d="M22 12A10 10 0 0 0 12 2v10z" /> </motion.svg> )

export const FloatingParticles = () => ( <div className="overflow-hidden absolute inset-0 pointer-events-none"> {Array.from({ length: 15 }).map((_, i) => ( <motion.div key={i} className="absolute w-2 h-2 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full opacity-20" animate={{ x: [0, Math.random() * 100 - 50], y: [0, Math.random() * 100 - 50], scale: [0, 1, 0], }} transition={{ duration: Math.random() * 3 + 2, repeat: Number.POSITIVE_INFINITY, delay: Math.random() * 2, ease: "easeInOut", }} style={{ left: `${Math.random() * 100}%`, top: `${Math.random() * 100}%`, }} /> ))} </div> )
// --- END OF FILE components/dashboard/DashboardIcons.jsx ---